@mixin grid-column($span) {
  flex: none;
  margin-left: $grid-gutter;
  width: calc(#{$col-size * $span} - #{$grid-gutter});
}

@mixin grid-offset($span) {
  margin-left: calc(#{$col-size * $span} + #{$grid-gutter});
}

@if $grid != null {
  $container-w: 600px;
  $col-size: 100% / $grid-cols;

  .g {
    @include property-x(margin, auto);
    width: $container-w;
    @each $b-key, $b-val in $breakpoints {
      @include min-width($b-val) {
        width: ($b-val - ($grid-gutter * 2));
      }
    }
  }

  .gr {
    display: flex;
    margin-left: -$grid-gutter;
    flex-wrap: wrap;
  }

  .gc {
    flex: 1;
    margin-left: $grid-gutter;

    &-fixed {
      flex: 0;
    }
    @for $_col-span from 1 to ($grid-cols + 1) {
      &-#{$_col-span} {
        @include grid-column($_col-span);
      }
    }
    @for $_col-offset from 1 to $grid-cols {
      &-o-#{$_col-offset} {
        @include grid-column($_col-offset);
      }
    }
  }

  @each $b-key, $b-val in $breakpoints {
    @include min-width($b-val) {
      .#{$b-key}\:gc {
        flex: 1;
        width: 100%;
      }
      @for $_col-span from 1 to ($grid-cols + 1) {
        .#{$b-key}\:gc-#{$_col-span} {
          @include grid-column($_col-span);
        }
      }
      @for $_col-offset from 1 to $grid-cols {
        .#{$b-key}\:gc-o-#{$_col-offset} {
          @include grid-offset($_col-offset);
        }
      }
    }
  }
}

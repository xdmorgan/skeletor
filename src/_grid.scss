$num-cols: 12;
$gutter-size: 24px;
$container-w: 600px;
$col-size: 100% / $num-cols;

.g {
  @include property-x(margin, auto);
  width: $container-w;
  @each $b-key, $b-val in $breakpoints {
    @include min-width($b-val) {
      width: ($b-val - ($gutter-size * 2));
    }
  }
}

.gr {
  display: flex;
  margin-left: -$gutter-size;
  flex-wrap: wrap;
}

@mixin grid-column($span) {
  flex: none;
  margin-left: $gutter-size;
  width: calc(#{$col-size * $span} - #{$gutter-size});
}

@mixin grid-offset($span) {
  margin-left: calc(#{$col-size * $span} + #{$gutter-size});
}

.gc {
  flex: 1;
  margin-left: $gutter-size;

  &-fixed {
    flex: 0;
  }
  @for $_col-span from 1 to ($num-cols + 1) {
    &-#{$_col-span} {
      @include grid-column($_col-span);
    }
  }
  @for $_col-offset from 1 to $num-cols {
    &-o-#{$_col-offset} {
      @include grid-column($_col-offset);
    }
  }
}

@each $b-key, $b-val in $breakpoints {
  @include min-width($b-val) {
    .#{$b-key}\:gc {
      flex: 1;
      width: 100%;
    }
    @for $_col-span from 1 to ($num-cols + 1) {
      .#{$b-key}\:gc-#{$_col-span} {
        @include grid-column($_col-span);
      }
    }
    @for $_col-offset from 1 to $num-cols {
      .#{$b-key}\:gc-o-#{$_col-offset} {
        @include grid-offset($_col-offset);
      }
    }
  }
}

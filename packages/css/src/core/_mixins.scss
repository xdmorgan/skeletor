@mixin border($color: currentColor, $dir: null, $size: 1px, $style: solid) {
  @if $dir {
    border-#{$dir}: $size $style $color;
  } @else {
    border: $size $style $color;
  }
}

@mixin debug($color: red, $alpha: 0.25, $width: 1px) {
  outline: $width solid rgba($color, $alpha);
}

@mixin min-width($size) {
  @media screen and (min-width: $size) {
    @content;
  }
}

@mixin max-width($size) {
  // prevent min and max width overlap pixel
  @media screen and (max-width: ($size - 1)) {
    @content;
  }
}

@mixin property-x($prop, $val) {
  #{$prop}-left: $val;
  #{$prop}-right: $val;
}

@mixin property-y($prop, $val) {
  #{$prop}-left: $val;
  #{$prop}-right: $val;
}

@mixin flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

@mixin overflow-ellipsis {
  white-space: nowrap;
  text-overflow: ellipsis;
  overflow: hidden;
}

@mixin list-reset {
  list-style: none;
  padding: 0;
}

@mixin stagger($delay: 100ms, $base: 0ms, $count: 10) {
  @for $i from 1 through $count {
    &:nth-child(#{$i}) {
      transition-delay: ($base + ($i * $delay));
    }
  }
}
